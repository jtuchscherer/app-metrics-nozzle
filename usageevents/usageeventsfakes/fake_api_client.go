// This file was generated by counterfeiter
package usageeventsfakes

import (
	"sync"

	"github.com/pivotalservices/app-metrics-nozzle/domain"
)

type FakeApiClient struct {
	AnnotateWithCloudControllerDataStub        func(app *domain.App)
	annotateWithCloudControllerDataMutex       sync.RWMutex
	annotateWithCloudControllerDataArgsForCall []struct {
		app *domain.App
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeApiClient) AnnotateWithCloudControllerData(app *domain.App) {
	fake.annotateWithCloudControllerDataMutex.Lock()
	fake.annotateWithCloudControllerDataArgsForCall = append(fake.annotateWithCloudControllerDataArgsForCall, struct {
		app *domain.App
	}{app})
	fake.recordInvocation("AnnotateWithCloudControllerData", []interface{}{app})
	fake.annotateWithCloudControllerDataMutex.Unlock()
	if fake.AnnotateWithCloudControllerDataStub != nil {
		fake.AnnotateWithCloudControllerDataStub(app)
	}
}

func (fake *FakeApiClient) AnnotateWithCloudControllerDataCallCount() int {
	fake.annotateWithCloudControllerDataMutex.RLock()
	defer fake.annotateWithCloudControllerDataMutex.RUnlock()
	return len(fake.annotateWithCloudControllerDataArgsForCall)
}

func (fake *FakeApiClient) AnnotateWithCloudControllerDataArgsForCall(i int) *domain.App {
	fake.annotateWithCloudControllerDataMutex.RLock()
	defer fake.annotateWithCloudControllerDataMutex.RUnlock()
	return fake.annotateWithCloudControllerDataArgsForCall[i].app
}

func (fake *FakeApiClient) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.annotateWithCloudControllerDataMutex.RLock()
	defer fake.annotateWithCloudControllerDataMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeApiClient) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}
